# Generated by Django 4.2.6 on 2023-10-23 07:21

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Customer",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("firstname", models.CharField(max_length=255, null=True)),
                ("lastname", models.CharField(max_length=255, null=True)),
                ("fullname", models.CharField(max_length=255, null=True)),
                ("business_name", models.CharField(max_length=255, null=True)),
                ("email", models.CharField(max_length=255, null=True)),
                ("phone", models.CharField(max_length=255, null=True)),
                ("mobile", models.CharField(max_length=255, null=True)),
                ("created_at", models.DateTimeField(null=True)),
                ("updated_at", models.DateTimeField(null=True)),
                ("pdf_url", models.CharField(max_length=255, null=True)),
                ("address", models.CharField(max_length=255, null=True)),
                ("address_2", models.CharField(max_length=255, null=True)),
                ("city", models.CharField(max_length=255, null=True)),
                ("state", models.CharField(max_length=255, null=True)),
                ("zip", models.CharField(max_length=255, null=True)),
                ("latitude", models.FloatField(null=True)),
                ("longitude", models.FloatField(null=True)),
                ("notes", models.TextField(null=True)),
                ("get_sms", models.BooleanField(null=True)),
                ("opt_out", models.BooleanField(null=True)),
                ("disabled", models.BooleanField(null=True)),
                ("no_email", models.BooleanField(null=True)),
                ("location_name", models.CharField(max_length=255, null=True)),
                ("location_id", models.IntegerField(null=True)),
                ("online_profile_url", models.CharField(max_length=255, null=True)),
                ("tax_rate_id", models.IntegerField(null=True)),
                ("notification_email", models.CharField(max_length=255, null=True)),
                ("invoice_cc_emails", models.CharField(max_length=255, null=True)),
                ("invoice_term_id", models.IntegerField(null=True)),
                ("referred_by", models.CharField(max_length=255, null=True)),
                ("ref_customer_id", models.IntegerField(null=True)),
                ("business_and_full_name", models.CharField(max_length=255, null=True)),
                ("business_then_name", models.CharField(max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="CustomerProperties",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("type", models.IntegerField(null=True)),
                ("notification_billing", models.IntegerField(null=True)),
                ("notification_reports", models.IntegerField(null=True)),
                ("notification_marketing", models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Estimate",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("customer_id", models.IntegerField(null=True)),
                (
                    "customer_business_then_name",
                    models.CharField(max_length=255, null=True),
                ),
                ("number", models.CharField(max_length=255, null=True)),
                ("status", models.CharField(max_length=255, null=True)),
                ("created_at", models.DateTimeField(null=True)),
                ("updated_at", models.DateTimeField(null=True)),
                ("date", models.DateTimeField(null=True)),
                ("subtotal", models.FloatField(null=True)),
                ("total", models.FloatField(null=True)),
                ("tax", models.FloatField(null=True)),
                ("ticket_id", models.IntegerField(null=True)),
                ("pdf_url", models.CharField(max_length=255, null=True)),
                ("location_id", models.IntegerField(null=True)),
                ("invoice_id", models.IntegerField(null=True)),
                ("employee", models.CharField(max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Invoice",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("customer_id", models.IntegerField(null=True)),
                (
                    "customer_business_then_name",
                    models.CharField(max_length=255, null=True),
                ),
                ("number", models.IntegerField(null=True)),
                ("created_at", models.DateTimeField(null=True)),
                ("updated_at", models.DateTimeField(null=True)),
                ("date", models.DateTimeField(null=True)),
                ("due_date", models.DateTimeField(null=True)),
                ("subtotal", models.FloatField(null=True)),
                ("total", models.FloatField(null=True)),
                ("tax", models.FloatField(null=True)),
                ("verified_paid", models.BooleanField(null=True)),
                ("tech_marked_paid", models.BooleanField(null=True)),
                ("ticket_id", models.IntegerField(null=True)),
                ("user_id", models.IntegerField(null=True)),
                ("pdf_url", models.CharField(max_length=255, null=True)),
                ("is_paid", models.BooleanField(null=True)),
                ("location_id", models.IntegerField(null=True)),
                ("po_number", models.CharField(max_length=255, null=True)),
                ("contact_id", models.IntegerField(null=True)),
                ("note", models.TextField(null=True)),
                ("hardwarecost", models.FloatField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Payment",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("created_at", models.DateTimeField(null=True)),
                ("updated_at", models.DateTimeField(null=True)),
                ("success", models.BooleanField(null=True)),
                ("payment_amount", models.FloatField(null=True)),
                ("invoice_ids", models.CharField(max_length=255, null=True)),
                ("ref_num", models.CharField(max_length=255, null=True)),
                ("applied_at", models.DateTimeField(null=True)),
                ("payment_method", models.CharField(max_length=255, null=True)),
                ("transaction_response", models.CharField(max_length=255, null=True)),
                ("signature_date", models.DateTimeField(null=True)),
                ("customer_id", models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("price_cost", models.FloatField(null=True)),
                ("price_retail", models.FloatField(null=True)),
                ("condition", models.CharField(max_length=255, null=True)),
                ("description", models.TextField(null=True)),
                ("maintain_stock", models.BooleanField(null=True)),
                ("name", models.CharField(max_length=255, null=True)),
                ("quantity", models.IntegerField(null=True)),
                ("warranty", models.CharField(max_length=255, null=True)),
                ("sort_order", models.CharField(max_length=255, null=True)),
                ("reorder_at", models.CharField(max_length=255, null=True)),
                ("disabled", models.BooleanField(null=True)),
                ("taxable", models.BooleanField(null=True)),
                ("product_category", models.CharField(max_length=255, null=True)),
                ("category_path", models.CharField(max_length=255, null=True)),
                ("upc_code", models.CharField(max_length=255, null=True)),
                ("discount_percent", models.CharField(max_length=255, null=True)),
                ("warranty_template_id", models.CharField(max_length=255, null=True)),
                ("qb_item_id", models.CharField(max_length=255, null=True)),
                ("desired_stock_level", models.CharField(max_length=255, null=True)),
                ("price_wholesale", models.FloatField(null=True)),
                ("notes", models.TextField(null=True)),
                ("tax_rate_id", models.CharField(max_length=255, null=True)),
                ("physical_location", models.CharField(max_length=255, null=True)),
                ("serialized", models.BooleanField(null=True)),
                ("vendor_ids", models.CharField(max_length=255, null=True)),
                ("long_description", models.TextField(null=True)),
                ("location_quantities", models.CharField(max_length=255, null=True)),
                ("photos", models.CharField(max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Ticket",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("number", models.IntegerField(null=True)),
                ("subject", models.CharField(max_length=255, null=True)),
                ("created_at", models.DateTimeField(null=True)),
                ("customer_id", models.IntegerField(null=True)),
                (
                    "customer_business_then_name",
                    models.CharField(max_length=255, null=True),
                ),
                ("due_date", models.DateTimeField(null=True)),
                ("resolved_at", models.DateTimeField(null=True)),
                ("start_at", models.DateTimeField(null=True)),
                ("end_at", models.DateTimeField(null=True)),
                ("location_id", models.IntegerField(null=True)),
                ("problem_type", models.CharField(max_length=255, null=True)),
                ("status", models.CharField(max_length=255, null=True)),
                ("ticket_type_id", models.IntegerField(null=True)),
                ("user_id", models.IntegerField(null=True)),
                ("updated_at", models.CharField(max_length=255, null=True)),
                ("pdf_url", models.CharField(max_length=255, null=True)),
                ("priority", models.CharField(max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="TicketProperties",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("day", models.CharField(max_length=255, null=True)),
                ("case", models.CharField(max_length=255, null=True)),
                ("other", models.CharField(max_length=255, null=True)),
                ("s_n_num", models.CharField(max_length=255, null=True)),
                ("tag_num", models.CharField(max_length=255, null=True)),
                ("claim_num", models.CharField(max_length=255, null=True)),
                ("location", models.CharField(max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("email", models.CharField(max_length=255, null=True)),
                ("full_name", models.CharField(max_length=255, null=True)),
                ("created_at", models.DateTimeField(null=True)),
                ("updated_at", models.DateTimeField(null=True)),
                ("group", models.CharField(max_length=255, null=True)),
                ("admin", models.BooleanField(null=True)),
                ("color", models.CharField(max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="TicketComment",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("created_at", models.DateTimeField(null=True)),
                ("updated_at", models.DateTimeField(null=True)),
                ("subject", models.CharField(max_length=255, null=True)),
                ("body", models.TextField(null=True)),
                ("tech", models.CharField(max_length=255, null=True)),
                ("hidden", models.BooleanField(null=True)),
                ("user_id", models.IntegerField(null=True)),
                (
                    "ticket",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comments",
                        to="repairshopr_data.ticket",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="ticket",
            name="properties",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="tickets",
                to="repairshopr_data.ticketproperties",
            ),
        ),
        migrations.CreateModel(
            name="InvoiceLineItem",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("created_at", models.DateTimeField(null=True)),
                ("updated_at", models.DateTimeField(null=True)),
                ("item", models.CharField(max_length=255, null=True)),
                ("name", models.CharField(max_length=255, null=True)),
                ("cost", models.FloatField(null=True)),
                ("price", models.FloatField(null=True)),
                ("quantity", models.FloatField(null=True)),
                ("product_id", models.IntegerField(null=True)),
                ("taxable", models.BooleanField(null=True)),
                ("discount_percent", models.FloatField(null=True)),
                ("position", models.IntegerField(null=True)),
                ("invoice_bundle_id", models.IntegerField(null=True)),
                ("discount_dollars", models.FloatField(null=True)),
                ("product_category", models.CharField(max_length=255, null=True)),
                (
                    "parent_invoice",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="line_items",
                        to="repairshopr_data.invoice",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="EstimateLineItem",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("created_at", models.DateTimeField(null=True)),
                ("updated_at", models.DateTimeField(null=True)),
                ("item", models.CharField(max_length=255, null=True)),
                ("name", models.CharField(max_length=255, null=True)),
                ("cost", models.FloatField(null=True)),
                ("price", models.FloatField(null=True)),
                ("quantity", models.FloatField(null=True)),
                ("product_id", models.IntegerField(null=True)),
                ("taxable", models.BooleanField(null=True)),
                ("discount_percent", models.FloatField(null=True)),
                ("position", models.IntegerField(null=True)),
                ("invoice_bundle_id", models.IntegerField(null=True)),
                ("discount_dollars", models.FloatField(null=True)),
                ("product_category", models.CharField(max_length=255, null=True)),
                (
                    "parent_estimate",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="line_items",
                        to="repairshopr_data.estimate",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CustomerContact",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=255, null=True)),
                ("address1", models.CharField(max_length=255, null=True)),
                ("address2", models.CharField(max_length=255, null=True)),
                ("city", models.CharField(max_length=255, null=True)),
                ("state", models.CharField(max_length=255, null=True)),
                ("zip", models.CharField(max_length=255, null=True)),
                ("email", models.CharField(max_length=255, null=True)),
                ("phone", models.CharField(max_length=255, null=True)),
                ("mobile", models.CharField(max_length=255, null=True)),
                ("latitude", models.FloatField(null=True)),
                ("longitude", models.FloatField(null=True)),
                ("account_id", models.IntegerField(null=True)),
                ("notes", models.TextField(null=True)),
                ("created_at", models.DateTimeField(null=True)),
                ("updated_at", models.DateTimeField(null=True)),
                ("vendor_id", models.IntegerField(null=True)),
                ("opt_out", models.BooleanField(null=True)),
                ("extension", models.CharField(max_length=255, null=True)),
                (
                    "parent_customer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="contacts",
                        to="repairshopr_data.customer",
                    ),
                ),
                (
                    "properties",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="repairshopr_data.customerproperties",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="customer",
            name="properties",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="customer",
                to="repairshopr_data.customerproperties",
            ),
        ),
    ]
